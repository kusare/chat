import type { NextPage } from "next";
import Head from "next/head";
import { Box, Stack, Button, TextField, FormControl } from "@mui/material";
import {
  signIn,
  signOutUser,
  ProfilePic,
  UserName,
  setChatMsg,
  useGetChatMsgs,
  useGetChatSubMsgs,
  setImgMsg,
  ChatMsgNormalEle,
  ChatMsgRecipiLayout,
  SubChatMsgRecipiLayout,
} from "../components/ChatFirebase";
import Grid from "@mui/material/Grid";
import { Input } from "@mui/material";
import React, { useState, useEffect, useRef } from "react";
import { Global, css } from "@emotion/react";
import { atom, useRecoilValue, useSetRecoilState } from "recoil";
import { cssBackgroundState } from "../recoil/States";
import { ChatLayoutChips } from "../components/Chips";
import { chatRadioBtnIdState } from "../recoil/States";
import {
  SwipeableTemporaryDrawer,
  CustomDrawer,
} from "../components/GlobalParts";
import { useGetWindowSize } from "../utils/get-window-size";
import { useRouter } from "next/router";
import { ThreadTopMsg, ThreadTopMsgById } from "../components/ThreadParts";
import { SubChatMsgEle } from "./chat";
import { ChatMsgs } from "./chat";

// export function ChatMsgs() {
//   //msgIdに応じて表示を切り替える
//   const chatRadioBtnId = useRecoilValue(chatRadioBtnIdState);
//   const msgId = chatRadioBtnId;

//   const chatMsgs = useGetChatMsgs();

//   const normal = chatMsgs.map((msg, index) => (
//     <ChatMsgNormalEle key={index.toString()} msg={msg} />
//   ));
//   const recipe = chatMsgs.map((msg, index) => (
//     <ChatMsgRecipiLayout key={index.toString()} msg={msg}>
//       <p>{msg?.id}</p>
//       <SubChatMsgEle key={index.toString()} docId={msg?.id} />
//     </ChatMsgRecipiLayout>
//   ));

//   return (
//     <>
//       {msgId === "Normal" && normal}
//       {msgId === "Recipe" && recipe}
//     </>
//   );
// }

export const UseChatContent: React.FC = () => {
  const { query } = useRouter();
  const [title, setTitle] = useState("");
  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {
    setTitle(event.target.value);
  };
  const [chatTxt, setChatTxt] = useState("");

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setChatTxt(event.target.value);
  };

  return (
    <>
      <Grid container direction="row">
        <Grid item xs={12} md={6} alignItems="center">
          {/*
 ██████╗██╗  ██╗██╗██████╗ ███████╗
██╔════╝██║  ██║██║██╔══██╗██╔════╝
██║     ███████║██║██████╔╝███████╗
██║     ██╔══██║██║██╔═══╝ ╚════██║
╚██████╗██║  ██║██║██║     ███████║
 ╚═════╝╚═╝  ╚═╝╚═╝╚═╝     ╚══════╝
                                   
 */}

          <ChatLayoutChips></ChatLayoutChips>
          <ChatMsgs />
        </Grid>
        <Grid item xs={12} md={6}>
          <h1>{query.id}</h1>
          <ThreadTopMsgById docId={query.id}>
            <SubChatMsgEle docId={query.id} getLimit={1000} />
          </ThreadTopMsgById>
        </Grid>
      </Grid>
    </>
  );
};

const Page: NextPage = () => {
  const { height, width } = useGetWindowSize();
  const cssText = useRecoilValue(cssBackgroundState);

  /**
██████╗ ███████╗████████╗██╗   ██╗██████╗ ███╗   ██╗
██╔══██╗██╔════╝╚══██╔══╝██║   ██║██╔══██╗████╗  ██║
██████╔╝█████╗     ██║   ██║   ██║██████╔╝██╔██╗ ██║
██╔══██╗██╔══╝     ██║   ██║   ██║██╔══██╗██║╚██╗██║
██║  ██║███████╗   ██║   ╚██████╔╝██║  ██║██║ ╚████║
╚═╝  ╚═╝╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═══╝
                                                    
 */
  return (
    <>
      <Global
        styles={css`
          body {
            ${cssText}
          }
        `}
      />
      <Head>
        <title>Hamu House</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {width <= 599 && (
        <SwipeableTemporaryDrawer>
          <UseChatContent />
        </SwipeableTemporaryDrawer>
      )}

      {599 < width && (
        <CustomDrawer>
          <UseChatContent />
        </CustomDrawer>
      )}
    </>
  );
};

export default Page;
